{"version":3,"file":"static/js/407.9290b36d.chunk.js","mappings":"uMA+CA,UAvCsB,WACpB,OAAgCA,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAsBR,OApBAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GACRI,MAAK,SAACC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,8BACvB,IACAL,MAAK,SAACM,GACL,IAAMC,EAASD,EAAKE,KAAKC,KAAI,SAACC,GAAD,MAAY,CACvCd,GAAIc,EAAMd,GACVe,IAAKD,EAAME,aAFgB,IAI7BjB,EAAYY,EACb,IACAM,OAAM,SAACC,GACNC,QAAQD,MAAM,yBAA0BA,EACzC,GACJ,GAAE,CAAClB,KAGF,0BACE,wBACGF,EAASe,KAAI,SAACC,GAAD,OACZ,yBACE,gBAAKM,MAAO,CAAEC,OAAO,aAAcC,IAAKR,EAAMC,IAAN,0CAA+CD,EAAMC,KAAQQ,EAAUC,MAAO,IAAKC,IAAI,kBADxHX,EAAMd,GADH,OAQrB,C,uJC3CD,IAAM0B,EAAW,gCACXC,EAAS,mCACFC,EAAiB,WAC1B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,oCAAwCC,GAEvD,EAEYG,EAAY,SAACC,GACtB,OAAOF,MAAM,GAAD,OAAIH,EAAJ,gCAAoCC,EAApC,kBAAqDI,GACpE,EAEYC,EAAa,SAACC,GACvB,OAAOJ,MAAM,GAAD,OAAIH,EAAJ,iBAAqBO,EAArB,oBAAwCN,GACvD,EAEYxB,EAAa,SAAC8B,GACvB,OAAOJ,MAAM,GAAD,OAAIH,EAAJ,iBAAqBO,EAArB,4BAAgDN,GAC/D,EAEYO,EAAa,SAACD,GACvB,OAAOJ,MAAM,GAAD,OAAIH,EAAJ,iBAAqBO,EAArB,4BAAgDN,GAC/D,C","sources":["components/CreditsMovies/CreditsMovies.jsx","services/getMovies.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { useParams } from 'react-router-dom';\nimport { getCredits } from 'services/getMovies';\n\nimport noImages from '..//../images/noImages.jpg';\n\n\nconst CreditsMovies = () => {\n  const [movieImg, setmovieImg] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getCredits(id)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject('Network response was not ok');\n      })\n      .then((data) => {\n        const newImg = data.cast.map((movie) => ({\n          id: movie.id,\n          img: movie.profile_path, // \n        }));\n        setmovieImg(newImg);\n      })\n      .catch((error) => {\n        console.error('Error fetching movies:', error);\n      });\n  }, [id]);\n\n  return (\n    <div>\n      <ul>\n        {movieImg.map((movie) => (\n          <li key={movie.id}>\n            <img style={{ margin:`35 0 0 10`}} src={movie.img ? `https://image.tmdb.org/t/p/w500/${movie.img}` : noImages} width={250} alt=\"Movie Poster\" />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n\n\nexport default CreditsMovies;\n\n\n\n\n\n","const BASE_URL = 'https://api.themoviedb.org/3/'\nconst API_KEY ='920c36ff8242d8709b1534f84ec52659'\nexport const getMoviesAllDay =()=>{\n    return fetch(`${BASE_URL}trending/all/day?api_key=${API_KEY}`)\n    \n}\n\nexport const getSearch = (query) =>{\n    return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`) \n}\n\nexport const getDetails = (movieId)=>{\n    return fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`) \n}\n\nexport const getCredits = (movieId)=>{\n    return fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`) \n}\n\nexport const getReviews = (movieId)=>{\n    return fetch(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`) \n}\n\n\n\n"],"names":["useState","movieImg","setmovieImg","id","useParams","useEffect","getCredits","then","response","ok","json","Promise","reject","data","newImg","cast","map","movie","img","profile_path","catch","error","console","style","margin","src","noImages","width","alt","BASE_URL","API_KEY","getMoviesAllDay","fetch","getSearch","query","getDetails","movieId","getReviews"],"sourceRoot":""}