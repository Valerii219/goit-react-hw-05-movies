{"version":3,"file":"static/js/102.24752068.chunk.js","mappings":"2NACA,EAAuB,2B,SC4CvB,EAzCqB,WACnB,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAsBR,OApBAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAWH,GACRI,MAAK,SAACC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,8BACvB,IACAL,MAAK,SAACM,GACL,IAAMC,EAAUD,EAAKE,QAAQC,KAAI,SAACC,GAAD,MAAa,CAC5Cd,GAAIc,EAAOd,GACXe,KAAMD,EAAOE,QAFkB,IAIjCjB,EAAgBY,EACjB,IACAM,OAAM,SAACC,GACNC,QAAQD,MAAM,yBAA0BA,EACzC,GACJ,GAAE,CAAClB,KAGF,yBACGF,EAAasB,OAAS,GACrB,wBACGtB,EAAae,KAAI,SAACC,GAAD,OAChB,yBACE,cAAGO,UAAWC,EAAd,SAAyBR,EAAOC,QADzBD,EAAOd,GADA,OAOpB,cAAGqB,UAAWC,EAAd,oCAIP,C,uJC3CD,IAAMC,EAAW,gCACXC,EAAS,mCACFC,EAAiB,WAC1B,OAAOC,MAAM,GAAD,OAAIH,EAAJ,oCAAwCC,GAEvD,EAEYG,EAAY,SAACC,GACtB,OAAOF,MAAM,GAAD,OAAIH,EAAJ,gCAAoCC,EAApC,kBAAqDI,GACpE,EAEYC,EAAa,SAACC,GACvB,OAAOJ,MAAM,GAAD,OAAIH,EAAJ,iBAAqBO,EAArB,oBAAwCN,GACvD,EAEYO,EAAa,SAACD,GACvB,OAAOJ,MAAM,GAAD,OAAIH,EAAJ,iBAAqBO,EAArB,4BAAgDN,GAC/D,EAEYrB,EAAa,SAAC2B,GACvB,OAAOJ,MAAM,GAAD,OAAIH,EAAJ,iBAAqBO,EAArB,4BAAgDN,GAC/D,C","sources":["webpack://react-homework-template/./src/components/ReviewMovies/ReviewMovies.module.css?5c2a","components/ReviewMovies/ReviewMovies.jsx","services/getMovies.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"text\":\"ReviewMovies_text__rvgfx\"};","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/getMovies';\nimport css from './ReviewMovies.module.css'\nconst ReviewMovies = () => {\n  const [moviesReview, setmoviesReview] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    getReviews(id)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject('Network response was not ok');\n      })\n      .then((data) => {\n        const reviews = data.results.map((review) => ({\n          id: review.id,\n          text: review.content,\n        }));\n        setmoviesReview(reviews);\n      })\n      .catch((error) => {\n        console.error('Error fetching movies:', error);\n      });\n  }, [id]);\n\n  return (\n    <div>\n      {moviesReview.length > 0 ? (\n        <ul>\n          {moviesReview.map((review) => (\n            <li key={review.id}>\n              <p className={css.text}>{review.text}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className={css.text}>No reviews available.</p>\n      )}\n    </div>\n  );\n};\n \nexport default ReviewMovies;","const BASE_URL = 'https://api.themoviedb.org/3/'\nconst API_KEY ='920c36ff8242d8709b1534f84ec52659'\nexport const getMoviesAllDay =()=>{\n    return fetch(`${BASE_URL}trending/all/day?api_key=${API_KEY}`)\n    \n}\n\nexport const getSearch = (query) =>{\n    return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`) \n}\n\nexport const getDetails = (movieId)=>{\n    return fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`) \n}\n\nexport const getCredits = (movieId)=>{\n    return fetch(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`) \n}\n\nexport const getReviews = (movieId)=>{\n    return fetch(`${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`) \n}\n\n\n\n"],"names":["useState","moviesReview","setmoviesReview","id","useParams","useEffect","getReviews","then","response","ok","json","Promise","reject","data","reviews","results","map","review","text","content","catch","error","console","length","className","css","BASE_URL","API_KEY","getMoviesAllDay","fetch","getSearch","query","getDetails","movieId","getCredits"],"sourceRoot":""}