{"version":3,"file":"static/js/569.5a2d6cc0.chunk.js","mappings":"+MA+GA,UA1GqB,WACnB,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACbC,GAAcC,EAAAA,EAAAA,SAAO,GACzB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAcF,EAAaG,IAAI,MAErCC,EAAAA,EAAAA,YAAU,YACPF,GAAeD,EAAgB,CAAC,EAAG,GAClC,CAACC,EAAaD,KAGlBG,EAAAA,EAAAA,YAAU,WACJP,EAAYQ,SAAWH,KACzBI,EAAAA,EAAAA,IAAUJ,GACPK,MAAK,SAACC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,8BACvB,IACAL,MAAK,SAACM,GACL,IAAMtB,EAASsB,EAAKC,QAAQC,KAAI,SAACC,GAAD,MAAY,CAC1CC,GAAID,EAAMC,GACVC,MAAOF,EAAME,OAASF,EAAMG,cAFE,IAIhCzB,EAAaH,EACd,IACA6B,OAAM,SAACC,GACNC,QAAQD,MAAM,yBAA0BA,EACzC,IAEHxB,EAAYQ,SAAU,EAEzB,GAAE,CAACH,IAuCJ,OACE,4BACE,kBAAMqB,SAjCW,SAACC,GACpBA,EAAEC,iBACoB,KAAlBlC,EAAOmC,QAIXlC,EAAU,KAEVc,EAAAA,EAAAA,IAAUf,GACPgB,MAAK,SAACC,GACL,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,8BACvB,IACAL,MAAK,SAACM,GACL,IAAMtB,EAASsB,EAAKC,QAAQC,KAAI,SAACC,GAAD,MAAY,CAC1CC,GAAID,EAAMC,GACVC,MAAOF,EAAME,OAASF,EAAMG,cAFE,IAIhCzB,EAAaH,EACd,IACA6B,OAAM,SAACC,GACNC,QAAQD,MAAM,yBAA0BA,EACzC,IAEDpB,EAAgB,CAAE0B,EAAGpC,KAvBrBqC,MAAM,2BA0BT,EAIG,WACE,kBACEC,KAAK,OACLC,YAAY,gBACZC,MAAOxC,EACPyC,SA5CiB,SAACR,GACxBhC,EAAUgC,EAAES,cAAcF,MAAMG,cAGjC,EAyCOC,UAAWC,EAAAA,EAAAA,SAEb,mBAAQP,KAAK,SAASM,UAAWC,EAAAA,EAAAA,QAAjC,wBAGF,yBACG3C,EAAU4C,OAAS,GACnB,4BAAK,eAAIF,UAAWC,EAAAA,EAAAA,MAAf,yBACN,eAAID,UAAWC,EAAAA,EAAAA,KAAf,SAEG3C,EAAUsB,KAAI,SAACC,GAAD,OAEb,yBACE,SAAC,KAAD,CAAMsB,GAAE,kBAAatB,EAAMC,IAAOkB,UAAWC,EAAAA,EAAAA,UAAeG,MAAQ,CAACC,KAAK7C,GAA1E,SAAsFqB,EAAME,OAASF,EAAMG,iBADpGH,EAAMC,GAFF,SAOd,OAIV,C,oBC5GD,KAAgB,MAAQ,6BAA6B,UAAY,iCAAiC,KAAO,4BAA4B,MAAQ,6BAA6B,QAAU,+B","sources":["components/SearchMovies/SearchMovies.jsx","webpack://react-homework-template/./src/components/PopularMovies/PopularMovies.module.css?c098"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Link,   useLocation,  useSearchParams } from 'react-router-dom';\nimport css from '../PopularMovies/PopularMovies.module.css'\nimport { getSearch } from 'services/getMovies';\n\nconst SearchMovies = () => {\n  const [movies, setMovies] = useState('');\n  const [movieList, setMovieList] = useState([]);\n  const location = useLocation();\nconst firstRender = useRef(true);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchValue = searchParams.get('q');\n  \n  useEffect(()=>{\n    !searchValue && setSearchParams({})}\n    , [searchValue, setSearchParams]\n  )\n\n  useEffect(() => {\n    if (firstRender.current && searchValue) {\n      getSearch(searchValue)\n        .then((response) => {\n          if (response.ok) {\n            return response.json();\n          }\n          return Promise.reject('Network response was not ok');\n        })\n        .then((data) => {\n          const movies = data.results.map((movie) => ({\n            id: movie.id,\n            title: movie.title || movie.original_name,\n          }));\n          setMovieList(movies);\n        })\n        .catch((error) => {\n          console.error('Error fetching movies:', error);\n        });\n\n      firstRender.current = false;\n    }\n  }, [searchValue]);\n  \n  const changeNameMovies = (e) => {\n    setMovies(e.currentTarget.value.toLowerCase());\n    \n  \n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (movies.trim() === '') {\n      alert('Write something in input');\n      return;\n    }\n    setMovies('');\n\n    getSearch(movies)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        return Promise.reject('Network response was not ok');\n      })\n      .then((data) => {\n        const movies = data.results.map((movie) => ({\n          id: movie.id,\n          title: movie.title || movie.original_name,\n        }));\n        setMovieList(movies);\n      })\n      .catch((error) => {\n        console.error('Error fetching movies:', error);\n      });\n\n      setSearchParams({ q: movies });\n    \n    \n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Search movies\"\n          value={movies}\n          onChange={changeNameMovies}\n          className={css.input}\n        />\n        <button type=\"submit\" className={css.btnForm}>Search</button>\n      </form>\n\n      <div>\n        {movieList.length > 0 ?\n        (<div><h2 className={css.trend}>Movie List</h2>\n        <ul className={css.list}>\n          \n          {movieList.map((movie) => (\n            \n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}  className={css.movieList} state ={{from:location}}>{movie.title || movie.original_name}</Link>\n            </li>\n          ))}\n        </ul></div>\n      ) : (\"\")}\n      </div>\n    </div>\n  );\n};\n\nexport default SearchMovies;","// extracted by mini-css-extract-plugin\nexport default {\"trend\":\"PopularMovies_trend__0aKrE\",\"movieList\":\"PopularMovies_movieList__ZCMie\",\"list\":\"PopularMovies_list__5t5yK\",\"input\":\"PopularMovies_input__haKoq\",\"btnForm\":\"PopularMovies_btnForm__9ZK8N\"};"],"names":["useState","movies","setMovies","movieList","setMovieList","location","useLocation","firstRender","useRef","useSearchParams","searchParams","setSearchParams","searchValue","get","useEffect","current","getSearch","then","response","ok","json","Promise","reject","data","results","map","movie","id","title","original_name","catch","error","console","onSubmit","e","preventDefault","trim","q","alert","type","placeholder","value","onChange","currentTarget","toLowerCase","className","css","length","to","state","from"],"sourceRoot":""}